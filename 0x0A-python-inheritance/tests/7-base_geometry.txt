===================
Integer Validator
===================

This subclass creates a public method that determines if the user is passing
through an integer as they should

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

Correct arguments:
    >>> bg.integer_validator("my_int", 12)

Passing through a string instead of an integer:
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

If 0 is passed through:
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

If a negative number is passed:
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
        ...
    ValueError: distance must be greater than 0

===========================
Docstrings
===========================

>>> m_doc = __import__('7-base_geometry').__doc__
>>> len(m_doc) > 1
True

>>> c_doc = __import__('7-base_geometry').BaseGeometry.__doc__
>>> len(c_doc) > 1
True

>>> m_doc = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
>>> len(m_doc) > 1
True

>>> m_doc = __import__('7-base_geometry').BaseGeometry.area.__doc__
>>> len(m_doc) > 1
True

